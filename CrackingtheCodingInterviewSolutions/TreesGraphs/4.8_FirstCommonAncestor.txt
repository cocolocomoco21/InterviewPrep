Find the first common ancestor of two nodes in a binary tree. Avoid storing additional nodes in a data structure.

Approach: use a parent pointer and an IsVisited flag to traverse the full path of n1. Then, run back with n2 to find the first node that has IsVisited. 

Node class looks something like this:

class Node:
    Node leftChild
    Node rightChild
    Node parent
    bool IsVisited

Node FirstCommonAncestor(Node n1, Node n2)
    if n1 == n2
        return n1
    if n1 == null || n2 == null
        return null
    
    Node current = n1
    while current != null
        current.IsVisited = true
        current = current.parent
    current = n2
    while current != null
        if current.IsVisited
            return current
        current = current.parent
    return null     // error -  not same tree